// –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (testnet)
import FlowTransactionScheduler from 0x8c5303eaa26202d6
import FlowGarden from 0xeb21973261cf61d5

access(all) contract GrowActionContract {

    // —Ä–µ—Å—É—Ä—Å-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º
    access(all) resource GrowHandler: FlowTransactionScheduler.TransactionHandler {
        access(all) let gardenRef: &FlowGarden.NFT

        init(gardenRef: &FlowGarden.NFT) {
            self.gardenRef = gardenRef
        }

        // –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º
        access(FlowTransactionScheduler.Execute)
        fun executeTransaction(id: UInt64, data: AnyStruct?) {
            self.gardenRef.grow()
            log("üåø NFT grew one stage via scheduler (id=".concat(id.toString()).concat(")"))
        }
    }

    // —Ñ–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    access(all) fun createHandler(gardenRef: &FlowGarden.NFT): @GrowHandler {
        return <- create GrowHandler(gardenRef: gardenRef)
    }
}
